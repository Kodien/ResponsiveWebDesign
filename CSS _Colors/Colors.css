.marker, .randombox{
    height: 25px;
    width: 200px;
    margin: 10px auto;
    /* You can add a value before auto for the margin property to give the element at least that value of space around it */
}
.one {
    background-color: rgb(43, 98, 32);
    /* You can use the rgb function to select colors using the rgb scale */
    /* The maximum value for each color is 255 */
    /* The rgb function uses the primary colors in which if combined, will make white */
    /* A secondary color is produced if 2 of the primary colors has the value 255 and the other one has the value of 0 */
    /* A tertiary color is the combination of a primary color at its max value and another on half of its value with the other one at 0 */
}
.two {
    background-color: #00FF00;
    /* This is the hexadecimal scale. 00 means 0% and FF means 100% of that color */
    /* This is the more common way to specify a color in CSS */
    opacity: 0.5;
    /* The opacity property sets how transparent an element is */
}
.three {
    background-color: hsl(240, 100%, 50%);
    /*The HSL color model, or hue, saturation, and lightness, is another way to represent colors.

    The CSS hsl function accepts 3 values: a number from 0 to 360 for hue, a percentage from 0 to 100 for saturation, and a percentage from 0 to 100 for lightness.

    Saturation is the intensity of a color from 0 to 100%. You must add the percent sign % to the saturation and lightness values.

    Lightness is how bright a color appears, from 0%, complete black, to 100%, complete white, with 50% being neutral. */
}
.container {
    background: linear-gradient(90deg, #22333B 0%, #EAE0D5 100%);
    /* We can set gradients in our colors using the linear-gradient function */
    /* It accepts the direction of the gradient as its first value, and 2 colors to gradient */
    /* Keep in mind that you can add more than 2 colors */
    /* The 50% acts as a color stop. It sets where a color starts in a gradient (and sometimes ends. 0%, starts at the beginning, 100%, starts at the end */
    /* Of course you can use HEX and hsl too to set the colors */
    /* The default gradient direction is 180 degrees */
    padding: 10px 0;
    /* The first value will be used for the top and bottom padding, while the next is used for left and right padding */
    /* This also applies to the margin property */
}
.cursed {
    background: rgba(20, 24, 242, 0.5);
    /* The a in the back of the rgba function stands for alpha channel */
    /* It accepts a value from 0 to 1 for the transparency of the element */
    border-left-width: 10px;
    border-left-style: solid;
    border-left-color: black;
    /* In CSS, we can control every side of the border */
    /* The border-style property sets how the border looks (e.g. solid line, dotted lines, etc.) */
    border-right: 10px solid black;
    /* Or, you can use the border-side function that accepts 3 of those values in 1 function */
    box-shadow: 5px 5px 5px 0 grey
    /* The box-shadow property creates a shadow below a box */
    /* The first 5px is used to move the shadow right */
    /* The second 5px is used to move the shadow down */
    /* The third 5px is the blurRadius, the greater the value, the greater the blur is */
    /* The 0 is the spreadRadius, it creates a shadow all around the element */
    /* You can use negative values to move the shadow to the opposite direction */
}

/* COLOR THEORY FROM FREECODECAMP */

/* Complementary colors are colors that are on the opposite sides of the color wheel */
/* Placing them side by side can create the accent to attract the viewer's eyer */
/* This can be used when you want to attract the viewer's eyes to something in your website */

/* When designing your website, use one dominant color, and add another color (like red for example) to contrast */
/* You can use this color to attract viewer's eyes to important buttons and headings */
